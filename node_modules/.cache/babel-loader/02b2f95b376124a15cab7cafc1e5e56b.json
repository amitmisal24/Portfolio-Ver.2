{"ast":null,"code":"var _jsxFileName = \"D:\\\\PV2\\\\src\\\\components\\\\Form\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container, ContainerSucces } from './styles';\nimport { useForm } from '@formspree/react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Form() {\n  _s();\n\n  const [state, handleFormspreeSubmit] = useForm('xknkpqry');\n  const [validEmail, setValidEmail] = useState(false);\n  const [message, setMessage] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n\n  function verifyEmail(email) {\n    if (validator.isEmail(email)) {\n      setValidEmail(true);\n    } else {\n      setValidEmail(false);\n    }\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {}; // Basic validation checks\n\n    if (!formData.name) newErrors.name = 'Name is required';\n\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email address is invalid';\n    }\n\n    if (!formData.message) newErrors.message = 'Message is required';\n\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        // Send data to the backend API\n        const response = await fetch('http://localhost:5000/api/submitForm', {\n          // Update URL if deployed\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n\n        if (response.ok) {\n          toast.success('Form successfully submitted!', {\n            position: toast.POSITION.BOTTOM_LEFT,\n            pauseOnFocusLoss: false,\n            closeOnClick: true,\n            hideProgressBar: false,\n            toastId: 'succeeded'\n          });\n          setFormData({\n            name: '',\n            email: '',\n            message: ''\n          }); // Clear the form\n          // Refresh the page after successful submission\n\n          setTimeout(() => {\n            window.location.reload();\n          }, 2000); // Delay refresh to allow toast to show\n        } else {\n          const result = await response.json();\n          alert(`Submission failed: ${result.message}`);\n        }\n      } catch (error) {\n        console.error('Error submitting form:', error);\n        alert('An error occurred while submitting the form.');\n      }\n    } else {\n      setErrors(newErrors); // Display validation errors\n    }\n  };\n\n  useEffect(() => {\n    if (state.succeeded) {\n      toast.success('Email successfully sent!', {\n        position: toast.POSITION.BOTTOM_LEFT,\n        pauseOnFocusLoss: false,\n        closeOnClick: true,\n        hideProgressBar: false,\n        toastId: 'succeeded'\n      });\n      setFormData({\n        name: '',\n        email: '',\n        message: ''\n      }); // Clear the form\n    }\n  }, [state.succeeded]);\n\n  if (state.succeeded) {\n    return /*#__PURE__*/_jsxDEV(ContainerSucces, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Thanks for getting in touch!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n        },\n        children: \"Back to the top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Get in touch using the form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        id: \"name\",\n        type: \"text\",\n        name: \"name\",\n        onChange: e => {\n          setFormData({ ...formData,\n            name: e.target.value\n          });\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        id: \"email\",\n        type: \"email\",\n        name: \"email\",\n        onChange: e => {\n          setFormData({ ...formData,\n            email: e.target.value\n          });\n          verifyEmail(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        placeholder: \"Send a message to get started.\",\n        id: \"message\",\n        name: \"message\",\n        onChange: e => {\n          setMessage(e.target.value);\n          setFormData({ ...formData,\n            message: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: state.submitting || !validEmail || !message,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"/KKi154ZQVxuhTSf66BNNm0aGUY=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Container","ContainerSucces","useForm","toast","ToastContainer","useEffect","useState","validator","Form","state","handleFormspreeSubmit","validEmail","setValidEmail","message","setMessage","formData","setFormData","name","email","errors","setErrors","verifyEmail","isEmail","handleSubmit","e","preventDefault","newErrors","test","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","success","position","POSITION","BOTTOM_LEFT","pauseOnFocusLoss","closeOnClick","hideProgressBar","toastId","setTimeout","window","location","reload","result","json","alert","error","console","succeeded","scrollTo","top","behavior","target","value","submitting"],"sources":["D:/PV2/src/components/Form/Form.tsx"],"sourcesContent":["import { Container, ContainerSucces } from './styles'\r\nimport { useForm, ValidationError } from '@formspree/react'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { useEffect, useState } from 'react'\r\nimport validator from 'validator'\r\n\r\nexport function Form() {\r\n  const [state, handleFormspreeSubmit] = useForm('xknkpqry')\r\n  const [validEmail, setValidEmail] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: '',\r\n  })\r\n  const [errors, setErrors] = useState<any>({})\r\n\r\n  function verifyEmail(email: string) {\r\n    if (validator.isEmail(email)) {\r\n      setValidEmail(true)\r\n    } else {\r\n      setValidEmail(false)\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    const newErrors: any = {}\r\n\r\n    // Basic validation checks\r\n    if (!formData.name) newErrors.name = 'Name is required'\r\n    if (!formData.email) {\r\n      newErrors.email = 'Email is required'\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Email address is invalid'\r\n    }\r\n    if (!formData.message) newErrors.message = 'Message is required'\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        // Send data to the backend API\r\n        const response = await fetch('http://localhost:5000/api/submitForm', {  // Update URL if deployed\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        })\r\n\r\n        if (response.ok) {\r\n          toast.success('Form successfully submitted!', {\r\n            position: toast.POSITION.BOTTOM_LEFT,\r\n            pauseOnFocusLoss: false,\r\n            closeOnClick: true,\r\n            hideProgressBar: false,\r\n            toastId: 'succeeded',\r\n          })\r\n          setFormData({ name: '', email: '', message: '' })  // Clear the form\r\n          // Refresh the page after successful submission\r\n          setTimeout(() => {\r\n            window.location.reload()\r\n          }, 2000)  // Delay refresh to allow toast to show\r\n\r\n        } else {\r\n          const result = await response.json()\r\n          alert(`Submission failed: ${result.message}`)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error submitting form:', error)\r\n        alert('An error occurred while submitting the form.')\r\n      }\r\n    } else {\r\n      setErrors(newErrors)  // Display validation errors\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (state.succeeded) {\r\n      toast.success('Email successfully sent!', {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n        pauseOnFocusLoss: false,\r\n        closeOnClick: true,\r\n        hideProgressBar: false,\r\n        toastId: 'succeeded',\r\n      })\r\n      setFormData({ name: '', email: '', message: '' })  // Clear the form\r\n    }\r\n  }, [state.succeeded])\r\n\r\n  if (state.succeeded) {\r\n    return (\r\n      <ContainerSucces>\r\n        <h3>Thanks for getting in touch!</h3>\r\n        <button\r\n          onClick={() => {\r\n            window.scrollTo({ top: 0, behavior: 'smooth' })\r\n          }}\r\n        >\r\n          Back to the top\r\n        </button>\r\n        <ToastContainer />\r\n      </ContainerSucces>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Get in touch using the form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          placeholder=\"Name\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={(e) => {\r\n            setFormData({ ...formData, name: e.target.value })\r\n          }}\r\n          required\r\n        />\r\n        {errors.name && <p>{errors.name}</p>}\r\n        \r\n        <input\r\n          placeholder=\"Email\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={(e) => {\r\n            setFormData({ ...formData, email: e.target.value })\r\n            verifyEmail(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        {errors.email && <p>{errors.email}</p>}\r\n        \r\n        <textarea\r\n          required\r\n          placeholder=\"Send a message to get started.\"\r\n          id=\"message\"\r\n          name=\"message\"\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n            setFormData({ ...formData, message: e.target.value })\r\n          }}\r\n        />\r\n        {errors.message && <p>{errors.message}</p>}\r\n        \r\n        <button\r\n          type=\"submit\"\r\n          disabled={state.submitting || !validEmail || !message}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <ToastContainer />\r\n    </Container>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}